@model Acme1.Models.Product

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <style type="text/css">
        .field-validation-valid, .validation-summary-valid {
            display: none;
        }

        .field-validation-error {
            color: #f00;
        }

        .validation-summary-errors {
            color: #f00;
            font-weight: bold;
        }

        .input-validation-error {
            border: 2px solid #f00;
            background-color: #fee;
        }
    </style>

    <title>Edit</title>
</head>
<body style="background-color:wheat;">

   
    @using (Html.BeginForm("Edit", "Product", FormMethod.Post,
 new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*@Html.HiddenFor(model => model.ProductID)

        @Html.HiddenFor(model => model.Name)

        @Html.HiddenFor(model => model.ShortDescription)

        @Html.HiddenFor(model => model.LongDescription)

        @Html.HiddenFor(model => model.CategoryID)

        @Html.HiddenFor(model => model.ImageFile)*@


        <table>
            <tr>
                <td>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.TextBoxFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.TextBoxFor(model => model.ProductID, new { @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.CategoryID, new SelectListItem[]{
                                new SelectListItem() {Text = "Costumes", Value="costumes"},
                                new SelectListItem() {Text = "Masks", Value="masks"},
                                new SelectListItem() {Text = "Special Effects", Value="fx"},
                                new SelectListItem() {Text = "Props", Value="props"}})
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        <input type="text" name="ImageFile" value="@Model.ImageFile" readonly />
                        <br />
                        <input type="file" name="uploadfile" />
                    </div>
                    <br />

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.OnHand, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OnHand, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OnHand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <img src="~/content/images/products/@Model.ImageFile" style="width:250px;height:300px">
                </td>
            </tr>
        </table>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control", @cols = 80, @rows = 2, style = "max-width:600px;width:600px;" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LongDescription, new { htmlAttributes = new { @class = "form-control", @cols = 80, @rows = 4, style = "max-width:600px;width:600px;" } })
                @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
        }

    <br />
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
</body>
</html>
